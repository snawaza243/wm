CREATE OR REPLACE PROCEDURE WEALTHMAKER.PSM_SIP_MASTER_RECO_TR2 (
    p_Channel               IN BRANCH_MASTER.BRANCH_TAR_CAT%TYPE,
    P_REGION                IN BRANCH_MASTER.REGION_ID%TYPE,
    P_ZONE                  IN BRANCH_MASTER.ZONE_ID%TYPE,
    P_BRANCH                IN BRANCH_MASTER.BRANCH_CODE%TYPE,
    P_RM                    IN TRANSACTION_MF_TEMP1.RMCODE%TYPE,
    P_FROMDATE              IN VARCHAR2,
    P_TODATE                IN VARCHAR2,
    P_AMC                   IN TRANSACTION_MF_TEMP1.MUT_CODE%TYPE,
    P_AR                    IN TRANSACTION_MF_TEMP1.TRAN_CODE%TYPE,
    P_RECONCILIATIONSTATUS  IN CHAR,
    P_COB                   IN CHAR, 
    P_TRANTYPE              IN TRANSACTION_MF_TEMP1.TRAN_TYPE%TYPE,
    P_REGISTRAR             IN VARCHAR2,
    P_PMS                   IN CHAR,
    P_OP                    IN CHAR,
    P_LOG_ID                IN VARCHAR2,
    P_ROLE_ID               IN VARCHAR2,
    P_CURSOR                OUT SYS_REFCURSOR
) AS
    V_QUERY         VARCHAR2(4000);
    V_REG           VARCHAR2(30);
    V_BRANCH_CAT    VARCHAR2(30) :=NULL;
    V_SRM_CODE      VARCHAR2(30) :=NULL;
BEGIN
/*
 RTA FIND DATA: 
 SELECT APP_NO,CHEQUE_NO,PANNO,FOLIO_NO,AMOUNT,REMARK_RECO,SOURCE_CODE,DISPATCH,SCH_CODE, WEALTHMAKER.FN_IDENTIFY_REGISTRAR@MF.BAJAJCAPITAL(MUT_CODE) REGISTRAR, NVL(COB_FLAG,0) COB_FLAG, MUT_CODE 
 (SELECT REG FROM REG_SCHEMES@MF.BAJAJCAPITAL WHERE MUT_CODE = MF.MUT_CODE AND ROWNUM = 1) REGISTRAR
 FROM TRANSACTION_MF_TEMP1 WHERE TRAN_CODE= TR______ 

*/

-- ADD THIS AT REGISTRAT  
    V_QUERY := 'SELECT 
    E.RM_CODE RMCODE, MF.BROKER_ID, MF.SIP_AMOUNT, MF.remark_reco remark, MF.source_code, MF.DISPATCH,
    WEALTHMAKER.FN_IDENTIFY_REGISTRAR@MF.BAJAJCAPITAL(MF.mut_code) registrar, 
    NVL(MF.COB_FLAG,0) AS COB_FLAG,    
    
    INV.INVESTOR_NAME,INV.ADDRESS1||'',''||INV.ADDRESS2||'',''||INV.PHONE||'',''||INV.EMAIL ADDRESS1 ,CT.CITY_NAME,      
    MF.BANK_NAME,MF.CLIENT_CODE,MF.SCH_CODE SCH_CODE,MF.MUT_CODE,RM_NAME,BRANCH_NAME,PANNO,AMC.MUT_NAME MUT_NAME,SCH_NAME SCH_NAME,
    TR_DATE,TRAN_TYPE,APP_NO,FOLIO_NO,PAYMENT_MODE, CHEQUE_NO, CHEQUE_DATE,
    AMOUNT,SIP_TYPE,LEAD_NO,LEAD_NAME,TRAN_CODE,B.BRANCH_CODE,BUSINESS_RMCODE,MF.TRAN_TYPE TRAN_TYPE, MF.SIP_TYPE SIP_TYPE, 
    CASE WHEN  MF.LOGGEDUSERID=''MFONLINE'' THEN ''ONLINE'' WHEN  MF.LOGGEDUSERID=''VALUEFY'' THEN ''ONLINE'' ELSE ''OFFLINE'' END LOGGEDUSER 
    
    
    
    FROM CITY_MASTER CT,EMPLOYEE_MASTER E,INVESTOR_MASTER INV,BRANCH_MASTER B,ALLCOMPANY AMC,ALLSCHEME SCH,TRANSACTION_MF_TEMP1 MF 
    WHERE  MF.MOVE_FLAG1 IS NULL AND MF.SIP_ID IS  NULL AND TRAN_TYPE NOT IN(''REVERTAL'') AND (MF.ASA<>''C'' OR MF.ASA IS NULL) AND INV.CITY_ID=CT.CITY_ID(+) 
    AND MF.CLIENT_CODE=INV.INV_CODE AND  TO_CHAR(MF.BUSINESS_RMCODE)=TO_CHAR(E.PAYROLL_ID) AND MF.BUSI_BRANCH_CODE=B.BRANCH_CODE';

    IF P_BRANCH IS NOT NULL THEN
        V_QUERY := V_QUERY || '  AND MF.MUT_CODE=AMC.MUT_CODE AND MF.SCH_CODE=SCH.SCH_CODE AND B.BRANCH_CODE IN (''' || P_BRANCH || ''') ';
    ELSE
        V_QUERY := V_QUERY || ' AND MF.MUT_CODE=AMC.MUT_CODE AND MF.SCH_CODE=SCH.SCH_CODE AND B.BRANCH_CODE IN (SELECT BRANCH_ID FROM USERDETAILS_JI WHERE LOGIN_ID='''||P_LOG_ID||''' AND ROLE_ID='''||P_ROLE_ID||''') ';
    END IF;

    IF p_Channel IS NOT NULL THEN
        V_QUERY := V_QUERY || ' AND B.BRANCH_TAR_CAT  = ''' || p_Channel || '''';
    END IF;

    IF P_REGION IS NOT NULL THEN
        V_QUERY := V_QUERY || ' AND B.REGION_ID = ''' || P_REGION || '''';
    END IF;

    IF P_ZONE IS NOT NULL THEN
        V_QUERY := V_QUERY || ' AND B.ZONE_ID = ''' || P_ZONE || '''';
    END IF;
    
    IF P_RM IS NOT NULL THEN
        V_QUERY := V_QUERY || ' AND  E.PAYROLL_ID = ''' || P_RM || '''';
    END IF;

    IF V_SRM_CODE IS NOT NULL THEN
        V_QUERY := V_QUERY || ' AND  E.RM_CODE = ''' || V_SRM_CODE || '''';
    END IF;

    IF P_AR IS NOT NULL THEN
        V_QUERY := V_QUERY || 'AND MF.TRAN_CODE= ''' || P_AR || '''';
    END IF;

    IF P_TRANTYPE IS NOT NULL THEN
        IF UPPER(P_TRANTYPE) = 'SIP' THEN
            V_QUERY := V_QUERY || ' AND (mf.SIP_FR = ''F'' OR mf.SIP_FR IS NULL) ';
        ELSIF UPPER(P_TRANTYPE) = 'REGULAR' THEN
            V_QUERY := V_QUERY || ' AND mf.SIP_FR = ''R'' ';
        END IF;
    END IF;

    IF P_AMC IS NOT NULL THEN
        V_QUERY := V_QUERY || ' AND MF.MUT_CODE = ''' || P_AMC || '''';
    END IF;

    IF P_RECONCILIATIONSTATUS IS NOT NULL THEN
        IF UPPER(P_RECONCILIATIONSTATUS) = 'Y' THEN
            V_QUERY := V_QUERY || ' AND MF.REC_FLAG=''Y''';

        ELSIF UPPER(P_RECONCILIATIONSTATUS) = 'N' THEN
            V_QUERY := V_QUERY || '  AND (MF.REC_FLAG =''N'' OR MF.REC_FLAG IS NULL)';
        
        ELSIF UPPER(P_RECONCILIATIONSTATUS) = 'P' THEN
            V_QUERY := V_QUERY || ' AND (MF.REC_FLAG =''N'' OR MF.REC_FLAG IS NULL) AND (PROCESSED IS NOT NULL OR REMARK_RECO=''REC0015'')';
        END IF;
    END IF;

    IF P_COB = '1' THEN
        V_QUERY := V_QUERY || ' AND MF.COB_FLAG = ''1''';
    END IF; 

    IF p_pms = '1' THEN
        v_query := v_query || ' AND (sch.prd = ''DT027'' OR sch.SCH_CODE IN (SELECT SCH_CODE FROM scheme_info WHERE nature = ''ETF'')) ';
    END IF;


    IF P_AR IS NULL THEN
        IF P_FROMDATE IS NOT NULL THEN
            V_QUERY := V_QUERY || ' AND TR_DATE>=TO_DATE(''' || P_FROMDATE || ''', ''DD-MM-YYYY'')';
        END IF;

        IF P_TODATE IS NOT NULL THEN
            V_QUERY := V_QUERY || ' AND TR_DATE<=TO_DATE(''' || P_TODATE || ''', ''DD-MM-YYYY'')';
        END IF;
    END IF;
    
    V_QUERY := V_QUERY || ' ORDER BY TR_DATE';
 
    OPEN P_CURSOR FOR V_QUERY;
    --OPEN P_CURSOR FOR SELECT V_QUERY FROM DUAL;
END ;