CREATE OR REPLACE PROCEDURE WEALTHMAKER.PSM_AM_GET_AGENT_BY_ID_v1(
    P_AGENT_ID      IN  VARCHAR2,
    P_RESULT          OUT SYS_REFCURSOR
) AS

CHEVK_SET_AADHAR     VARCHAR2(50) :=NULL;
BEGIN



SELECT NVL(aadhar_card_no, NULL)  INTO CHEVK_SET_AADHAR
FROM WEALTHMAKER.agent_master WHERE AGENT_CODE = P_AGENT_ID;


/*

IF CHEVK_SET_AADHAR IS NOT NULL THEN 
    IF LENGTH(TRIM(CHEVK_SET_AADHAR)) = 12 AND REGEXP_LIKE(TRIM(CHEVK_SET_AADHAR), '^[0-9]+$') THEN
        UPDATE WEALTHMAKER.agent_master
        SET aadhar_card_no = WEALTHMAKER.USER_LOGTRIM(CHEVK_SET_AADHAR)
        WHERE AGENT_CODE = P_AGENT_CODE; 
        COMMIT;
    END IF;
END IF;

*/


    OPEN P_RESULT FOR
    SELECT 
    AM.DOC_ID                   AS DT_NUMBER,
    AM.AGENT_CODE               AS AGENT_CODE,
    AM.EXIST_CODE               AS EXIST_CODE,
    AM.PAIDFLAG                 AS PAIDFLAG,
    AM.PAYMENTMODEID            AS PAYMENTMODEID,
    AM.ACCTYPEID                AS ACCTYPEID,
    AM.BANKID                   AS BANKID,
    AM.CITY_NAME                AS CITY_NAME,
    AM.ACCNO                    AS ACCNO,
    AM.NEFT_BANK_NAME           AS NEFT_BANK_NAME,
    AM.BANK_BRANCH_NAME         AS BANK_BRANCH_NAME,
    AM.IFSC_CODE                AS IFSC_CODE,
    AM.NAME_IN_BANK             AS NAME_IN_BANK,
    AM.AFFECTEDFROM             AS AFFECTEDFROM,
    AM.TIMEST                   AS TIMEST,
    AM.ANA_AUDITDATE            AS ANA_AUDITDATE,
    AM.DOB                      AS DOB,
    AM.POSP_CERTIFIED_ON_GI     AS POSP_CERTIFIED_ON_GI,
    AM.POSP_VALID_TILL_GI       AS POSP_VALID_TILL_GI,
    AM.POSP_CERTIFIED_ON_LI     AS POSP_CERTIFIED_ON_LI,
    AM.POSP_VALID_TILL_LI       AS POSP_VALID_TILL_LI,
    AM.AMFICERT                 AS AMFICERT,
    AM.ANA_AUDIT                AS ANA_AUDIT,
    AM.ONLINE_SUBSCIPTION       AS ONLINE_SUBSCIPTION,
    AM.BLOCK_AGENT              AS BLOCK_AGENT,
    AM.ONLINE_BLOCK_AGENT       AS ONLINE_BLOCK_AGENT,
    AM.VERIFIED_STATUS          AS VERIFIED_STATUS,
    AM.CPEMAILID                AS CPEMAILID,
    AM.SUB_BROKER_TYPE          AS SUB_BROKER_TYPE,
    AM.TITLE                    AS TITLE,
    AM.AGENT_NAME               AS AGENT_NAME,

    CASE
        WHEN SUBSTR(AM.GENDER,1,1) = 'M' THEN 'MALE'
        WHEN SUBSTR(AM.GENDER,1,1) = 'F' THEN 'FEMALE'
        WHEN SUBSTR(AM.GENDER,1,1) = 'N' THEN 'Non-Ind'
        ELSE null 
    end                         AS GENDER,
    AM.EMAIL                    AS EMAIL,
    AM.SOURCEID                 AS SOURCEID,
    AM.RM_CODE                  AS RM_CODE,
    AM.ADDRESS1                 AS ADDRESS1,
    AM.ADDRESS2                 AS ADDRESS2,
    AM.ADDRESS3                 AS ADDRESS3,
    AM.PINCODE                  AS PINCODE,
    AM.CITY_ID                  AS CITY_ID, 
    AM.LOCATION_ID              AS LOCATION_ID,
    AM.MOBILE                   AS MOBILE,
    AM.FAX                      AS FAX,
    AM.CONTACTPER               AS CONTACTPER,
    AM.TDS                      AS TDS,
    AM.PHONE                    AS PHONE,
    AM.REMARK                   AS REMARK,
    AM.CATEGORY_ID              AS CATEGORY_ID,
    AM.ONLINE_BLOCK_REMARK      AS ONLINE_BLOCK_REMARK,
    AM.OFFLINE_BLOCK_REMARK     AS OFFLINE_BLOCK_REMARK,
    AM.BANK_BRANCHID            AS BANK_BRANCHID,
    AM.SMS_FLAG                 AS SMS_FLAG,
    AM.GSTIN_NO                 AS GSTIN_NO,
    AM.statusid /AM.AGENT_TYPE/ AS AGENT_TYPE,
    AM.PAN                      AS PAN,
    AM.DIST                     AS DIST,
    CASE 
        WHEN aadhar_card_no IS NOT NULL AND LENGTH(aadhar_card_no) > 12 THEN 
            ( SELECT NVL(WEALTHMAKER.USER_UNLOG_v1(aadhar_card_no), NULL) FROM DUAL )
    END                         AS AADHAR_CARD_NO,
    AM.POSP_TYPE                AS POSP_TYPE,
    AM.POSP_NO_LI               AS POSP_NO_LI,
    AM.POSP_NO_GI               AS POSP_NO_GI,
    AM.POSP_MARKING             AS POSP_MARKING,
    AM.DOC_ID                   AS DOC_ID,
    AM.MASTER_ANA               AS MASTER_ANA,
    AM.R_ADDRESS1               AS RES_ADD_1,
    AM.R_ADDRESS2               AS RES_ADD_2,
    AM.R_STATE_NAME             AS RES_ADD_STATE,
    AM.R_CITY_NAME              AS RES_ADD_CITY,
    AM.R_PINCODE                AS RES_ADD_PIN,
    (SELECT BRANCH_NAME FROM BRANCH_MASTER WHERE BRANCH_CODE = AM.SOURCEID AND ROWNUM = 1)                      AS SOURCE_NAME,
    AM.AMFICERT                 AS AMFICERT,                -- CERTI = Y/N
    AM.AMFIEXTYPEID             AS AMFIEXTYPEID,            -- CERTI = EXAM ID
    AM.AMFIID                   AS AMFIID,                  -- CERTI = CERTIFICATE ID
    (SELECT COMMON_ID FROM TB_DOC_UPLOAD WHERE EXIST_CODE = AM.EXIST_CODE AND TRAN_TYPE= 'ANA' AND ROWNUM = 1)  AS TB_DOC_ID,

                -- Mailing Address Details
    CIM_MAIL.CITY_ID            AS M_CITY_ID,
    STM_MAIL.STATE_ID           AS M_STATE_ID,
    CTM_MAIL.COUNTRY_ID         AS M_COUNTRY_ID,
    EUIN,
    EXPIRE_DATE,
    EUIN_END_DATE

    FROM AGENT_MASTER AM

    LEFT JOIN CITY_MASTER CIM_MAIL ON CIM_MAIL.CITY_ID = AM.CITY_ID
    LEFT JOIN STATE_MASTER STM_MAIL ON STM_MAIL.STATE_ID = CIM_MAIL.STATE_ID
    LEFT JOIN COUNTRY_MASTER CTM_MAIL ON CTM_MAIL.COUNTRY_ID = STM_MAIL.COUNTRY_ID
    LEFT JOIN BRANCH_MASTER BRM ON AM.SOURCEID = STM_MAIL.COUNTRY_ID


    WHERE AM.AGENT_CODE = P_AGENT_ID AND ROWNUM = 1 ;
END;
/