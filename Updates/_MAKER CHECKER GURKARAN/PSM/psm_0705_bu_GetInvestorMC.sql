CREATE OR REPLACE PROCEDURE WEALTHMAKER.GETINVESTORMC (
  
  P_LOGIN_ID   VARCHAR2,
  P_ROLE_ID    VARCHAR2,
  P_BRANCH_CD  VARCHAR2,
  P_REGION_ID  VARCHAR2,
  P_AR_NO      VARCHAR2,
  P_ZONE_ID    VARCHAR2,
  P_RM_ID      VARCHAR2,
  P_AMC        VARCHAR2,
  P_MANUAL_REC VARCHAR2,
  P_AUTO_REC   VARCHAR2, 
  P_DATE_FROM  VARCHAR2,
  P_DATE_TO    VARCHAR2,
  P_ERRORMESSAGE OUT VARCHAR2,
  P_CURSOR OUT SYS_REFCURSOR
)
AS

 VSQL CLOB;

BEGIN
	
       
     VSQL := 'SELECT  TRAN_CODE,B.BRANCH_CODE,BUSINESS_RMCODE,INV.INVESTOR_NAME,INV.ADDRESS1||'',
     ''||INV.ADDRESS2||'',''||INV.PHONE||'',''||INV.EMAIL ADDRESS ,CT.CITY_NAME  ,
     MF.BANK_NAME,MF.CLIENT_CODE,MF.SCH_CODE SCH_CODE,
     MF.MUT_CODE,RM_NAME,BRANCH_NAME,PANNO,AMC.MUT_NAME MUT_NAME,SCH_NAME SCH_NAME,TR_DATE,
     TRAN_TYPE,APP_NO,FOLIO_NO,PAYMENT_MODE, CHEQUE_NO, CHEQUE_DATE,AMOUNT,SIP_TYPE,LEAD_NO,
     LEAD_NAME 
     
     FROM CITY_MASTER CT,EMPLOYEE_MASTER E,INVESTOR_MASTER INV,BRANCH_MASTER B, 
     ALLCOMPANY AMC,ALLSCHEME SCH,TRANSACTION_MF_TEMP1 MF  
     WHERE  MF.MOVE_FLAG1 IS NULL AND MF.SIP_ID IS  NULL AND INV.CITY_ID=CT.CITY_ID 
     AND MF.CLIENT_CODE=INV.INV_CODE AND  TO_CHAR(MF.BUSINESS_RMCODE)=TO_CHAR(E.PAYROLL_ID) 
     AND MF.BUSI_BRANCH_CODE=B.BRANCH_CODE AND MF.MUT_CODE=AMC.MUT_CODE 
     AND MF.SCH_CODE=SCH.SCH_CODE';

     IF P_BRANCH_CD IS  NULL THEN
       
        VSQL := VSQL ||' AND B.BRANCH_CODE IN (SELECT BRANCH_ID FROM USERDETAILS_JI WHERE LOGIN_ID='''||P_LOGIN_ID||''' AND ROLE_ID='''||P_ROLE_ID||''')';
     ELSE
        VSQL := VSQL ||' AND B.BRANCH_CODE IN ('||P_BRANCH_CD||' )';
           
     END IF; 
     
     IF P_REGION_ID IS NOT NULL THEN     
     
        VSQL := VSQL ||' AND B.REGION_ID ='''|| P_REGION_ID ||'''';
        
     END IF;
     
     IF P_AR_NO IS NOT NULL THEN     
     
        VSQL := VSQL ||' AND MF.TRAN_CODE ='''|| P_AR_NO ||'''';
        
     END IF;
     
     IF P_ZONE_ID IS NOT NULL THEN     
     
        VSQL := VSQL ||' AND B.ZONE_ID ='''|| P_ZONE_ID ||'''';
        
     END IF;
     
     IF P_RM_ID IS NOT NULL THEN     
     
        VSQL := VSQL ||' AND E.PAYROLL_ID ='''|| P_RM_ID ||'''';
        
     END IF;
     
     IF P_AMC IS NOT NULL THEN     
     
        VSQL := VSQL ||' AND MF.MUT_CODE ='''|| P_AMC ||'''';
        
     END IF;
     
     IF P_MANUAL_REC IS NOT NULL THEN     
     
        VSQL := VSQL ||' and mf.rec_flag=''Y'' and mf.rec_user<>''Auto''';
        
     END IF;   
     
     IF P_AUTO_REC IS NOT NULL THEN     
     
        VSQL := VSQL ||' and mf.rec_user=''Auto'' and mf.rec_flag=''Y''';
        
     END IF;
     
     VSQL := VSQL ||' AND MF.AUDIT_FLAG IS NULL';
     
     IF P_DATE_FROM IS NOT NULL THEN     
     
        VSQL := VSQL ||' AND TO_DATE(RECO_DATE)>=TO_DATE('''||P_DATE_FROM||''','''||'DD/MM/RRRR'||''')';
        
     END IF;
     
      IF P_DATE_TO IS NOT NULL THEN     
     
        VSQL := VSQL ||' AND TO_DATE(RECO_DATE)<=TO_DATE('''||P_DATE_TO||''','''||'DD/MM/RRRR'||''')';
        
     END IF;
     
      VSQL := VSQL || ' ORDER BY TR_DATE,RM_NAME ';        
      
      DBMS_OUTPUT.PUT_LINE(VSQL);
        OPEN P_CURSOR FOR VSQL;
        
EXCEPTION
     WHEN OTHERS
     THEN
     P_ERRORMESSAGE := SQLERRM (SQLCODE);
     OPEN P_CURSOR FOR SELECT '' || P_ERRORMESSAGE || '' FROM DUAL;  
        
   
END;
/
