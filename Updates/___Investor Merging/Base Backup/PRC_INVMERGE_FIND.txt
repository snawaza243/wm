CREATE OR REPLACE PROCEDURE WEALTHMAKER.PRC_INVMERGE_FIND(
    P_LOGIN_ID         VARCHAR2,
    P_ROLE_ID          VARCHAR2,
    P_CLIENT_SUBBROKER VARCHAR2,
    P_NAME             VARCHAR2,
    P_ADDRESS1         VARCHAR2,
    P_ADDRESS2         VARCHAR2,
    P_PHONE            VARCHAR2,
    P_MOBILE           VARCHAR2,
    P_PAN              VARCHAR2,
    P_CITY             VARCHAR2,
    P_BRANCH           VARCHAR2,
    P_RMCODE           VARCHAR2,
    P_SORT             VARCHAR2,
    P_ERRORMESSAGE     OUT VARCHAR2,
    P_CURSOR           OUT SYS_REFCURSOR)
AS
    VSQL CLOB;

BEGIN

--    P_ERRORMESSAGE := NULL;
--    IF P_CLIENT_SUBBROKER IS NULL OR P_NAME IS NULL OR P_ADDRESS1 IS NULL OR P_ADDRESS2 IS NULL OR P_PHONE IS NULL OR P_MOBILE IS NULL OR P_PAN IS NULL OR P_CITY IS NULL OR  P_BRANCH IS NULL OR P_RMCODE IS NULL OR P_SORT IS NULL THEN
--        P_ERRORMESSAGE := 'PLEASE SELECT ATLEAST ONE PARAMETER FOR SEARCH';
--    END IF ;

    BEGIN

        VSQL := 'SELECT CLIENT_NAME,CLIENT_CODE,A.ADDRESS1,A.ADDRESS2,C.CITY_NAME,B.BRANCH_NAME,A.PHONE,E.RM_NAME,KYC 
        FROM BRANCH_MASTER B,EMPLOYEE_MASTER E,CLIENT_MASTER A,CITY_MASTER C 
        WHERE E.SOURCE=B.BRANCH_CODE AND A.RM_CODE=E.RM_CODE AND A.CITY_ID=C.CITY_ID(+) AND CLIENT_NAME IS NOT NULL AND BRANCH_CODE IN (SELECT BRANCH_ID FROM USERDETAILS_JI WHERE LOGIN_ID='''||P_LOGIN_ID||''' AND ROLE_ID='''||P_ROLE_ID||''')';

        IF P_CLIENT_SUBBROKER IS NOT NULL THEN
            VSQL := VSQL || 'AND TO_CHAR(A.CLIENT_CODE)= ''' || P_CLIENT_SUBBROKER ||''''; 
        END IF;

        IF P_NAME IS NOT NULL THEN
            VSQL := VSQL || 'AND UPPER(A.CLIENT_NAME) LIKE ''%'||'' || P_NAME ||''||'%''';
        END IF;

        IF P_ADDRESS1 IS NOT NULL THEN
            VSQL := VSQL || 'AND UPPER(A.ADDRESS1) LIKE ''%'||'' || P_ADDRESS1 ||''||'%''';
        END IF;

        IF P_ADDRESS2 IS NOT NULL THEN
            VSQL := VSQL || 'AND UPPER(A.ADDRESS2) LIKE ''%'||'' || P_ADDRESS2 ||''||'%''';
        END IF;

         IF P_PHONE IS NOT NULL THEN
            VSQL := VSQL || 'AND UPPER(A.PHONE) LIKE ''%'||'' || P_PHONE ||''||'%''';
        END IF;

        IF P_MOBILE IS NOT NULL THEN
            VSQL := VSQL || 'AND UPPER(A.MOBILE) LIKE  ''%'||'' || P_MOBILE ||''||'%''';
        END IF;

        IF P_PAN IS NOT NULL THEN
            VSQL := VSQL || 'AND UPPER(A.PAN) LIKE  ''%'||'' || P_PAN ||''||'%''';
        END IF;

        IF P_CITY IS NOT NULL THEN
            VSQL := VSQL || 'AND A.CITY_ID='''|| P_CITY || '''';
        END IF;

        IF P_BRANCH IS NOT NULL THEN
            VSQL := VSQL || 'AND B.BRANCH_CODE='''|| P_BRANCH || '''';  
        END IF;

        IF P_RMCODE IS NOT NULL THEN
            VSQL := VSQL || 'AND E.PAYROLL_ID= '''|| P_RMCODE || '''';   
        END IF;

        IF P_SORT IS NOT NULL THEN
                IF P_SORT='Name' THEN
                    VSQL := VSQL || 'ORDER BY UPPER(A.CLIENT_NAME)';
                END IF;

                IF P_SORT='Address1' THEN
                    VSQL := VSQL || 'ORDER BY UPPER(TRIM(A.ADDRESS1))';
                END IF;

                IF P_SORT='Address2' THEN
                    VSQL := VSQL || 'ORDER BY UPPER(TRIM(A.ADDRESS2))';
                END IF;

                IF P_SORT='City' THEN
                    VSQL := VSQL || 'ORDER BY UPPER(TRIM(C.CITY_NAME))';
                END IF;

                IF P_SORT='Phone' THEN
                    VSQL := VSQL || 'ORDER BY UPPER(TRIM(A.PHONE))';
                END IF;       
        END IF;
        DBMS_OUTPUT.PUT_LINE(VSQL);
        OPEN P_CURSOR FOR VSQL;
    EXCEPTION
        WHEN OTHERS
        THEN
            P_ERRORMESSAGE := SQLERRM (SQLCODE);

            OPEN P_CURSOR FOR SELECT '' || P_ERRORMESSAGE || '' FROM DUAL;
    END;
END;
/