-- At procedure start
INSERT INTO PSM_PROCEDURE_LOG 
(LOG_ID, PROCEDURE_NAME, START_TIME, PARAMETERS, STATUS, 
 SESSION_ID, MODULE, ACTION, CLIENT_INFO)
VALUES 
(P_LOG_ID, 'YOUR_PROCEDURE', SYSTIMESTAMP, 
 'param1='||value1||',param2='||value2, 
 'STARTED',
 SYS_CONTEXT('USERENV','SESSIONID'),
 SYS_CONTEXT('USERENV','MODULE'),
 SYS_CONTEXT('USERENV','ACTION'),
 SYS_CONTEXT('USERENV','CLIENT_INFO'));

-- For intermediate events
INSERT INTO PSM_PROCEDURE_LOG 
(LOG_ID, PROCEDURE_NAME, EVENT_TIME, MESSAGE, RECORD_COUNT)
VALUES 
(P_LOG_ID, 'YOUR_PROCEDURE', SYSTIMESTAMP, 
 'Processed X records', v_count);

-- At successful completion
UPDATE PSM_PROCEDURE_LOG
SET END_TIME = SYSTIMESTAMP,
    STATUS = 'COMPLETED',
    MESSAGE = 'Procedure completed successfully'
WHERE LOG_ID = P_LOG_ID;

-- On error
UPDATE PSM_PROCEDURE_LOG
SET END_TIME = SYSTIMESTAMP,
    STATUS = 'ERROR',
    MESSAGE = 'Error: '||SQLERRM,
    ERROR_CODE = SQLCODE,
    ERROR_STACK = DBMS_UTILITY.FORMAT_ERROR_STACK
WHERE LOG_ID = P_LOG_ID;