CREATE OR REPLACE PROCEDURE WEALTHMAKER.GETINVESTORMC (
  P_LOGIN_ID     VARCHAR2,
  P_ROLE_ID      VARCHAR2,
  P_BRANCH_CD    VARCHAR2,
  P_REGION_ID    VARCHAR2,
  P_AR_NO        VARCHAR2,
  P_ZONE_ID      VARCHAR2,
  P_RM_ID        VARCHAR2,
  P_AMC          VARCHAR2,
  P_MANUAL_REC   VARCHAR2,
  P_AUTO_REC     VARCHAR2, 
  P_DATE_FROM    VARCHAR2,
  P_DATE_TO      VARCHAR2,
  
  P_CURSOR       OUT SYS_REFCURSOR
)
AS
  VSQL CLOB;
BEGIN
  VSQL := 'SELECT 
    MF.TRAN_CODE,
    B.BRANCH_CODE,
    MF.BUSINESS_RMCODE,
    INV.INVESTOR_NAME,
    INV.ADDRESS1,
    CT.CITY_NAME,
    MF.BANK_NAME,
    MF.CLIENT_CODE,
    MF.SCH_CODE,
    MF.MUT_CODE,
    E.RM_NAME,
    B.BRANCH_NAME,
    MF.PANNO,
    AMC.MUT_NAME,
    SCH.SCH_NAME,
    MF.TR_DATE,
    MF.TRAN_TYPE,
    MF.APP_NO,
    MF.FOLIO_NO,
    MF.PAYMENT_MODE,
    MF.CHEQUE_NO,
    MF.CHEQUE_DATE,
    MF.AMOUNT,
    MF.SIP_TYPE,
    MF.LEAD_NO,
    MF.LEAD_NAME
  FROM 
    TRANSACTION_MF_TEMP1 MF
    JOIN INVESTOR_MASTER INV ON MF.CLIENT_CODE = INV.INV_CODE
    JOIN CITY_MASTER CT ON INV.CITY_ID = CT.CITY_ID
    JOIN EMPLOYEE_MASTER E ON TO_CHAR(MF.BUSINESS_RMCODE) = TO_CHAR(E.PAYROLL_ID)
    JOIN BRANCH_MASTER B ON MF.BUSI_BRANCH_CODE = B.BRANCH_CODE
    JOIN ALLCOMPANY AMC ON MF.MUT_CODE = AMC.MUT_CODE
    JOIN ALLSCHEME SCH ON MF.SCH_CODE = SCH.SCH_CODE
  WHERE 
    MF.MOVE_FLAG1 IS NULL 
    AND MF.SIP_ID IS NULL';

  -- Branch filter
  IF P_BRANCH_CD IS NULL THEN
    VSQL := VSQL || ' AND B.BRANCH_CODE IN (
      SELECT BRANCH_ID 
      FROM USERDETAILS_JI 
      WHERE LOGIN_ID = ''' || P_LOGIN_ID || ''' 
        AND ROLE_ID = ''' || P_ROLE_ID || '''
    )';
  ELSE
    VSQL := VSQL || ' AND B.BRANCH_CODE IN (' || P_BRANCH_CD || ')';
  END IF;

  -- Optional filters
  IF P_REGION_ID IS NOT NULL THEN
    VSQL := VSQL || ' AND B.REGION_ID = ''' || P_REGION_ID || '''';
  END IF;

  IF P_AR_NO IS NOT NULL THEN
    VSQL := VSQL || ' AND MF.TRAN_CODE = ''' || P_AR_NO || '''';
  END IF;

  IF P_ZONE_ID IS NOT NULL THEN
    VSQL := VSQL || ' AND B.ZONE_ID = ''' || P_ZONE_ID || '''';
  END IF;

  IF P_RM_ID IS NOT NULL THEN
    VSQL := VSQL || ' AND E.PAYROLL_ID = ''' || P_RM_ID || '''';
  END IF;

  IF P_AMC IS NOT NULL THEN
    VSQL := VSQL || ' AND MF.MUT_CODE = ''' || P_AMC || '''';
  END IF;

  IF P_MANUAL_REC IS NOT NULL THEN
    VSQL := VSQL || ' AND MF.REC_FLAG = ''Y'' AND MF.REC_USER <> ''Auto''';
  END IF;

  IF P_AUTO_REC IS NOT NULL THEN
    VSQL := VSQL || ' AND MF.REC_USER = ''Auto'' AND MF.REC_FLAG = ''Y''';
  END IF;

  VSQL := VSQL || ' AND MF.AUDIT_FLAG IS NULL';

  IF P_DATE_FROM IS NOT NULL THEN
    VSQL := VSQL || ' AND MF.RECO_DATE >= TO_DATE(''' || P_DATE_FROM || ''', ''DD/MM/RRRR'')';
  END IF;

  IF P_DATE_TO IS NOT NULL THEN
    VSQL := VSQL || ' AND MF.RECO_DATE <= TO_DATE(''' || P_DATE_TO || ''', ''DD/MM/RRRR'')';
  END IF;

  VSQL := VSQL || ' ORDER BY MF.TR_DATE, E.RM_NAME';

   -- Open cursor
  OPEN P_CURSOR FOR VSQL;
 
 
END;
/
