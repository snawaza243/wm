CREATE OR REPLACE PROCEDURE WEALTHMAKER.PSM_AO_MM_INSERT (
    P_DT_NUMBER           IN VARCHAR2,
    P_EXIST_CLIENT_CODE   IN NUMBER,
    P_RM_BUSINESS_CODE    IN VARCHAR2,
    P_SALUTATION1         IN VARCHAR2,
    P_ACCOUNT_NAME        IN VARCHAR2,
    P_LOGGED_IN_USER      IN VARCHAR2,
    P_CLIENT_CODE_IN_MAIN IN VARCHAR2,
    P_MOBILE              IN VARCHAR2,
    P_PAN                 IN VARCHAR2,
    P_EMAIL               IN VARCHAR2,
    P_DOB                 IN DATE,
    P_RELATION            IN NUMBER,
    P_GNAME               IN VARCHAR2,
    P_GPAN                IN VARCHAR2,
    P_OCCUPATION          IN NUMBER,
    P_KYC                 IN VARCHAR2,
    P_APPROVE             IN VARCHAR2,
    P_GENDER              IN VARCHAR2,
    P_NOM                 IN VARCHAR2,
    P_ALLO                IN NUMBER,
    P_AADHAR_VALUE        IN VARCHAR2,
    P_RESULT              OUT SYS_REFCURSOR
) AS
    V_GENERATED_CLIENT_CODE CLIENT_TEST.CLIENT_CODE%TYPE;
    V_GENERATED_INV_CODE INVESTOR_MASTER.INV_CODE%TYPE;

    V_HEAD_AH CLIENT_TEST.CLIENT_CODE%TYPE;
    NEXTINVKYC NUMBER;

    -- Cached data from main client
    V_BRANCH_CODE         CLIENT_TEST.BRANCH_CODE%TYPE;
    V_NATIONALITY         CLIENT_TEST.NATIONALITY%TYPE;
    V_RESIDENT_NRI        CLIENT_TEST.RESIDENT_NRI%TYPE;
    V_LEAD_TYPE           CLIENT_TEST.LEAD_TYPE%TYPE;
    V_G_NATIONALITY       CLIENT_TEST.G_NATIONALITY%TYPE;
    V_ADD1                CLIENT_TEST.ADD1%TYPE;
    V_ADD2                CLIENT_TEST.ADD2%TYPE;
    V_STATE_ID            CLIENT_TEST.STATE_ID%TYPE;
    V_CITY_ID             CLIENT_TEST.CITY_ID%TYPE;
    V_PINCODE             CLIENT_TEST.PINCODE%TYPE;
    V_STD1                CLIENT_TEST.STD1%TYPE;
    V_TEL1                CLIENT_TEST.TEL1%TYPE;
    V_STD2                CLIENT_TEST.STD2%TYPE;
    V_TEL2                CLIENT_TEST.TEL2%TYPE;

    -- Cached data from existing investor
    V_INV_BRANCH_CODE     INVESTOR_MASTER.BRANCH_CODE%TYPE;
    V_INV_ADDRESS1        INVESTOR_MASTER.ADDRESS1%TYPE;
    V_INV_ADDRESS2        INVESTOR_MASTER.ADDRESS2%TYPE;
    V_INV_FAX             INVESTOR_MASTER.FAX%TYPE;
    V_INV_PINCODE         INVESTOR_MASTER.PINCODE%TYPE;    
    V_INV_PHONE           INVESTOR_MASTER.PHONE%TYPE;
    V_INV_PHONE1          INVESTOR_MASTER.PHONE1%TYPE;
    V_INV_PHONE2          INVESTOR_MASTER.PHONE2%TYPE;
    V_INV_STATUS          INVESTOR_MASTER.STATUS%TYPE;
    V_INV_CITY_ID         INVESTOR_MASTER.CITY_ID%TYPE;
    V_INV_SOURCE_ID       INVESTOR_MASTER.SOURCE_ID%TYPE;
    V_INV_RM_CODE         INVESTOR_MASTER.RM_CODE%TYPE;

    V_AADHAR_VALUE VARCHAR2(100) := NULL;
BEGIN
    
/*
    IF P_AADHAR_VALUE IS NOT NULL AND LENGTH(TRIM(TO_CHAR(P_AADHAR_VALUE))) = 12 THEN
        SELECT WEALTHMAKER.USER_LOG(TRIM(TO_CHAR(P_AADHAR_VALUE)))
        INTO V_AADHAR_VALUE
        FROM DUAL;
    END IF;
*/
 

    -- Fetch head values from client_test table 
    SELECT NATIONALITY, RESIDENT_NRI, LEAD_TYPE, G_NATIONALITY,
           ADD1, ADD2, STATE_ID, CITY_ID, PINCODE, STD1, TEL1, 
           STD2, TEL2, BRANCH_CODE, CLIENT_CODE
    INTO V_NATIONALITY, V_RESIDENT_NRI, V_LEAD_TYPE, V_G_NATIONALITY,
         V_ADD1, V_ADD2, V_STATE_ID, V_CITY_ID, V_PINCODE, V_STD1, V_TEL1,
         V_STD2, V_TEL2, V_BRANCH_CODE, V_HEAD_AH
    FROM CLIENT_TEST
    WHERE CLIENT_CODEKYC = P_EXIST_CLIENT_CODE;



    -- Fetch head values from the investor_master table
    SELECT  BRANCH_CODE, ADDRESS1, ADDRESS2, FAX, 
            PINCODE, PHONE, PHONE1, PHONE2, STATUS, 
            CITY_ID, SOURCE_ID, RM_CODE
    INTO    V_INV_BRANCH_CODE, V_INV_ADDRESS1, V_INV_ADDRESS2, V_INV_FAX, 
            V_INV_PINCODE, V_INV_PHONE, V_INV_PHONE1, V_INV_PHONE2, V_INV_STATUS, 
            V_INV_CITY_ID, V_INV_SOURCE_ID, V_INV_RM_CODE
    FROM INVESTOR_MASTER
    WHERE INV_CODE = P_EXIST_CLIENT_CODE;



    IF P_EXIST_CLIENT_CODE IS NOT NULL THEN
        -- Insert into CLIENT_TEST
        INSERT INTO CLIENT_TEST (
            CLIENT_CODE, CLIENTCODE_OLD, BUSINESS_CODE, TITLE, CLIENT_NAME,
            LOGGEDUSERID, MOBILE_NO, EMAIL, CLIENT_PAN,
            DOB, RELATION_ID, G_NAME, G_PAN, OCC_ID, INV_KYC, APPROVED,
            GENDER, AADHAR_CARD_NO, TIMEST, IS_NOMINEE, NOMINEE_PER,

            NATIONALITY, RESIDENT_NRI, LEAD_TYPE, G_NATIONALITY, ADD1, ADD2, 
            STATE_ID, CITY_ID, PINCODE, STD1, TEL1, STD2, TEL2, BRANCH_CODE, MAIN_CODE
        )
        VALUES (
            NULL, P_EXIST_CLIENT_CODE, P_RM_BUSINESS_CODE, P_SALUTATION1, P_ACCOUNT_NAME, 
            P_LOGGED_IN_USER, P_MOBILE, P_EMAIL, P_PAN, P_DOB, P_RELATION, P_GNAME,
            P_GPAN, P_OCCUPATION, P_KYC, P_APPROVE,
            P_GENDER, P_AADHAR_VALUE, SYSDATE, P_NOM, P_ALLO,

            V_NATIONALITY, V_RESIDENT_NRI, V_LEAD_TYPE, V_G_NATIONALITY, V_ADD1, V_ADD2, 
            V_STATE_ID, V_CITY_ID, V_PINCODE, V_STD1, V_TEL1, V_STD2, V_TEL2, V_BRANCH_CODE, V_HEAD_AH
        )
        RETURNING CLIENT_CODE INTO V_GENERATED_CLIENT_CODE;

        -- Insert into INVESTOR_MASTER
        INSERT INTO INVESTOR_MASTER (
            INV_CODE, INVESTOR_TITLE, INVESTOR_NAME, MOBILE, EMAIL, PAN,
            DOB, REL_ID, G_NAME, G_PAN, OCCUPATION_ID, KYC, APPROVED,
            GENDER, TIMEST, LOGGEDUSERID, AADHAR_CARD_NO, SOURCE_ID,

            BRANCH_CODE, ADDRESS1, ADDRESS2, FAX, PINCODE, PHONE, 
            PHONE1, PHONE2, STATUS, CITY_ID, RM_CODE
        )
        VALUES (
            NULL, P_SALUTATION1, P_ACCOUNT_NAME, P_MOBILE, P_EMAIL, P_PAN,
            P_DOB, P_RELATION, P_GNAME, P_GPAN, P_OCCUPATION, 'YES',
            P_APPROVE, SUBSTR(P_GENDER, 1, 1), SYSDATE, P_LOGGED_IN_USER,
            P_AADHAR_VALUE, SUBSTR(P_EXIST_CLIENT_CODE, 1, 8),

            V_INV_BRANCH_CODE, V_INV_ADDRESS1, V_INV_ADDRESS2, V_INV_FAX, V_INV_PINCODE, V_INV_PHONE, 
            V_INV_PHONE1, V_INV_PHONE2, V_INV_STATUS, V_INV_CITY_ID, V_INV_RM_CODE
        )
        RETURNING INV_CODE INTO V_GENERATED_INV_CODE;

        -- Get latest inv_code for that source
        SELECT MAX(INV_CODE)
        INTO NEXTINVKYC
        FROM INVESTOR_MASTER
        WHERE SOURCE_ID = SUBSTR(P_EXIST_CLIENT_CODE, 1, 8);

        -- Update KYC code and main code
        UPDATE CLIENT_TEST
        SET CLIENT_CODEKYC = NEXTINVKYC,
            MAIN_CODE = (SELECT CLIENT_CODE FROM CLIENT_TEST WHERE CLIENT_CODEKYC = P_EXIST_CLIENT_CODE)
        WHERE CLIENT_CODE = V_GENERATED_CLIENT_CODE;

        UPDATE INVESTOR_MASTER
        SET INV_CODE = NEXTINVKYC
        WHERE INV_CODE = V_GENERATED_INV_CODE;
       

        -- Final output
        OPEN P_RESULT FOR
        SELECT 'Successfully member added' AS MESSAGE FROM DUAL;

        COMMIT;

    ELSE
        OPEN P_RESULT FOR
        SELECT 'Invalid client head' AS MESSAGE FROM DUAL;
    END IF;
END PSM_AO_MM_INSERT;
/
