create or replace PROCEDURE PSM_DAP_INSERT_BPD_ONLY_BDD (
    p_COMPANY_CD        IN BAJAJ_DUE_DATA.COMPANY_CD%TYPE,
    p_STATUS_CD         IN BAJAJ_DUE_DATA.STATUS_CD%TYPE,
    p_LOCATION          IN BAJAJ_DUE_DATA.LOCATION%TYPE,
    p_POLICY_NO         IN BAJAJ_DUE_DATA.POLICY_NO%TYPE,
    p_CL_NAME           IN BAJAJ_DUE_DATA.CL_NAME%TYPE,
    p_PREM_AMT          IN BAJAJ_DUE_DATA.PREM_AMT%TYPE,
    p_PAY_MODE          IN BAJAJ_DUE_DATA.PAY_MODE%TYPE,
    p_DUE_DATE          IN VARCHAR2,
    p_CL_ADD1           IN BAJAJ_DUE_DATA.CL_ADD1%TYPE,
    p_CL_ADD2           IN BAJAJ_DUE_DATA.CL_ADD2%TYPE,
    p_CL_ADD3           IN BAJAJ_DUE_DATA.CL_ADD3%TYPE,
    p_CL_CITY           IN BAJAJ_DUE_DATA.CL_CITY%TYPE,
    p_CL_PIN            IN BAJAJ_DUE_DATA.CL_PIN%TYPE,
    p_CL_PHONE1         IN BAJAJ_DUE_DATA.CL_PHONE1%TYPE,
    p_CL_PHONE2         IN BAJAJ_DUE_DATA.CL_PHONE2%TYPE,
    p_CL_MOBILE         IN BAJAJ_DUE_DATA.CL_MOBILE%TYPE,
    p_MON_NO            IN BAJAJ_DUE_DATA.MON_NO%TYPE,
    p_YEAR_NO           IN BAJAJ_DUE_DATA.YEAR_NO%TYPE,
    p_USERID            IN BAJAJ_DUE_DATA.USERID%TYPE,
    p_IMPORT_DT         IN VARCHAR2,--BAJAJ_DUE_DATA.IMPORT_DT%TYPE, -- VARCHAR2
    p_EMP_NO            IN BAJAJ_DUE_DATA.EMP_NO%TYPE,
    p_INV_CD            IN BAJAJ_DUE_DATA.INV_CD%TYPE,
    p_DUP_REC           IN BAJAJ_DUE_DATA.DUP_REC%TYPE,
    p_PLAN_NAME         IN BAJAJ_DUE_DATA.PLAN_NAME%TYPE,
    p_PREM_FREQ         IN BAJAJ_DUE_DATA.PREM_FREQ%TYPE,
    p_DOC               IN VARCHAR2, --BAJAJ_DUE_DATA.DOC%TYPE,  -- VARCHAR2
    p_BRANCH_CD         IN BAJAJ_DUE_DATA.BRANCH_CD%TYPE,
    p_AR_BRANCH_CD      IN BAJAJ_DUE_DATA.AR_BRANCH_CD%TYPE,
    p_PLY_TERM          IN BAJAJ_DUE_DATA.PLY_TERM%TYPE,
    p_CL_ADD4           IN BAJAJ_DUE_DATA.CL_ADD4%TYPE,
    p_CL_ADD5           IN BAJAJ_DUE_DATA.CL_ADD5%TYPE,
    p_PLAN_NO           IN BAJAJ_DUE_DATA.PLAN_NO%TYPE,
    p_BPREM_FREQ        IN BAJAJ_DUE_DATA.BPREM_FREQ%TYPE,
    p_PREM_TERM         IN BAJAJ_DUE_DATA.PREM_TERM%TYPE,
    p_LAST_UPDATE_DT    IN VARCHAR2, --BAJAJ_DUE_DATA.LAST_UPDATE_DT%TYPE, -- VARCHAR2
    p_LAST_UPDATE       IN BAJAJ_DUE_DATA.LAST_UPDATE%TYPE,
    p_FRESH_RENEWAL4    IN BAJAJ_DUE_DATA.FRESH_RENEWAL4%TYPE,
    p_SYS_AR_NO         IN BAJAJ_DUE_DATA.SYS_AR_NO%TYPE,
    p_MAIL_FLAG         IN BAJAJ_DUE_DATA.MAIL_FLAG%TYPE,
    p_SEND_ID           IN BAJAJ_DUE_DATA.SEND_ID%TYPE, 
    p_SEND_DATE         IN VARCHAR2, --BAJAJ_DUE_DATA.SEND_DATE%TYPE,  -- VARCHAR2
    p_APP_NO            IN BAJAJ_DUE_DATA.APP_NO%TYPE,
    p_MATCHED           IN BAJAJ_DUE_DATA.MATCHED%TYPE,
    p_REN_STATUS        IN BAJAJ_DUE_DATA.REN_STATUS%TYPE,
    p_REMARKS           IN BAJAJ_DUE_DATA.REMARKS%TYPE,
    p_IMPORTDATATYPE    IN BAJAJ_DUE_DATA.IMPORTDATATYPE%TYPE,
    p_HISTORY           IN BAJAJ_DUE_DATA.HISTORY%TYPE,
    p_SYS_AR_NO_REN     IN BAJAJ_DUE_DATA.SYS_AR_NO_REN%TYPE,
    p_AUTOMAP           IN BAJAJ_DUE_DATA.AUTOMAP%TYPE,
    p_CLIENT_CD         IN BAJAJ_DUE_DATA.CLIENT_CD%TYPE,
    p_INV_CODE          IN BAJAJ_DUE_DATA.INV_CODE%TYPE,
    p_P_NAME            IN BAJAJ_DUE_DATA.P_NAME%TYPE,
    p_I_NAME            IN BAJAJ_DUE_DATA.I_NAME%TYPE,
    p_SA                IN BAJAJ_DUE_DATA.SA%TYPE,
    p_REM_FLAGE         IN BAJAJ_DUE_DATA.REM_FLAGE%TYPE,
    p_STATE_CD          IN BAJAJ_DUE_DATA.STATE_CD%TYPE,
    p_COMM              IN BAJAJ_DUE_DATA.COMM%TYPE,
    p_COMM_AMT          IN BAJAJ_DUE_DATA.COMM_AMT%TYPE,
    p_BASE_SYS_AR_NO    IN BAJAJ_DUE_DATA.BASE_SYS_AR_NO%TYPE,
    p_MATCH_HEADER      IN BAJAJ_DUE_DATA.MATCH_HEADER%TYPE,
    p_CPREM_FREQ        IN BAJAJ_DUE_DATA.CPREM_FREQ%TYPE,
    p_MATCH_HEADER1     IN BAJAJ_DUE_DATA.MATCH_HEADER1%TYPE,
    p_NEWINSERT         IN BAJAJ_DUE_DATA.NEWINSERT%TYPE,
    p_SLOT              IN BAJAJ_DUE_DATA.SLOT%TYPE,
    p_TALISMA_FLAG      IN BAJAJ_DUE_DATA.TALISMA_FLAG%TYPE,
    p_MARGIN4           IN BAJAJ_DUE_DATA.MARGIN4%TYPE,
    p_SMS_FLAG          IN BAJAJ_DUE_DATA.SMS_FLAG%TYPE,
    p_FORCE_FLAG        IN BAJAJ_DUE_DATA.FORCE_FLAG%TYPE,
    p_UPD_FLAG          IN BAJAJ_DUE_DATA.UPD_FLAG%TYPE,
    p_PLAN_UPD          IN BAJAJ_DUE_DATA.PLAN_UPD%TYPE,
    p_FREQ_UPD          IN BAJAJ_DUE_DATA.FREQ_UPD%TYPE,
    p_ACTIVE_CLIENT     IN BAJAJ_DUE_DATA.ACTIVE_CLIENT%TYPE,
    p_P_ADD1            IN BAJAJ_DUE_DATA.P_ADD1%TYPE,
    p_P_ADD2            IN BAJAJ_DUE_DATA.P_ADD2%TYPE,
    p_P_CITY            IN BAJAJ_DUE_DATA.P_CITY%TYPE,
    p_P_STATE_CD        IN BAJAJ_DUE_DATA.P_STATE_CD%TYPE,
    p_P_PIN             IN BAJAJ_DUE_DATA.P_PIN%TYPE,
    p_IADD1             IN BAJAJ_DUE_DATA.IADD1%TYPE,
    p_IADD2             IN BAJAJ_DUE_DATA.IADD2%TYPE,
    p_ICITY             IN BAJAJ_DUE_DATA.ICITY%TYPE,
    p_ISTATE_CD         IN BAJAJ_DUE_DATA.ISTATE_CD%TYPE,
    p_IPIN              IN BAJAJ_DUE_DATA.IPIN%TYPE,
    p_PLAN_RATE4        IN BAJAJ_DUE_DATA.PLAN_RATE4%TYPE,
    p_PAID_MONTH_YEAR   IN BAJAJ_DUE_DATA.PAID_MONTH_YEAR%TYPE,
    p_STATUS_CD_OLD     IN BAJAJ_DUE_DATA.STATUS_CD_OLD%TYPE,
    p_FREQ              IN Varchar2,
    p_FRESH_RENEWAL     IN BAJAJ_DUE_DATA.FRESH_RENEWAL%TYPE,
    p_MARGIN            IN BAJAJ_DUE_DATA.MARGIN%TYPE,
    p_PLAN_RATE         IN BAJAJ_DUE_DATA.PLAN_RATE%TYPE,
    p_RENEWAL_STATUS    IN BAJAJ_DUE_DATA.RENEWAL_STATUS%TYPE,
    p_FLAG_13M          IN BAJAJ_DUE_DATA.FLAG_13M%TYPE,
    p_ECS_DATE          IN VARCHAR2, --BAJAJ_DUE_DATA.ECS_DATE%TYPE,  -- VARCHAR2
    p_NEW_STATUS_CD     IN BAJAJ_DUE_DATA.NEW_STATUS_CD%TYPE,
    p_LOGIN             IN VARCHAR2,
    p_ddlImportDataTypeValue    IN VARCHAR2,
    p_MyImportDataType          IN VARCHAR2,
    p_MyImport                  IN VARCHAR2,
    p_chkDataTypeValue          IN VARCHAR2,
    p_FILE_NAME         IN VARCHAR2

) IS

 
 -- ddlImportDataTypeValue  : DUE, LAPSED, PAID, REINS
 -- MyImport                : D, L, 
 -- MyImportDataType        : LAPSEDDATA, DUEDATA
 -- p_chkDataTypeValue      : D, L, P, R

-- if (ddlImportDataTypeValue == "DUE")     THEN    MyImport = "D";         MyImportDataType = "DUEDATA";
-- if (ddlImportDataTypeValue == "LAPSED")  THEN    MyImport = "L";         MyImportDataType = "LAPSEDDATA";
-- if (ddlImportDataTypeValue == "PAID")    THEN    MyImport = "D";         MyImportDataType = "DUEDATA";
-- if (ddlImportDataTypeValue == "REINS")   THEN    MyImport = "L";         MyImportDataType = "LAPSEDDATA";

CURRENT_FREQ        NUMBER          := NULL;
CHK_D_BL_INS        VARCHAR2(20)    :=NULL;

-- Define variables to store the results for lapsed
v_l_policy_no    VARCHAR2(100) := NULL;
v_l_company_cd   VARCHAR2(100) := NULL;
v_l_due_date     DATE;
v_l_mon_no       NUMBER        := 0;
v_l_year_no      NUMBER        := 0;
v_l_status_cd    VARCHAR2(100) := NULL;
    
v_policy_no_dup VARCHAR2(100)   := null;

MyLapsedDate    VARCHAR2(10) := null;
CMB_DATA_TYPE   VARCHAR2(20)    := NULL;
BEGIN

-- FILTER FREQURENCY BY TEXT INTO NUMBER 
SELECT 
    CASE
        WHEN UPPER(TRIM(p_FREQ)) IN ('1', '01', 'ANNUALLY', 'ANNUAL', 'YEARLY') THEN 1
        WHEN UPPER(TRIM(p_FREQ)) IN ('12', 'MONTHLY') THEN 12
        WHEN UPPER(TRIM(p_FREQ)) = '0' THEN 0
        WHEN UPPER(TRIM(p_FREQ)) = 'QUARTERLY' THEN 4
        WHEN UPPER(TRIM(p_FREQ)) IN ('2', 'SEMI ANNUALLY', 'SEMI ANNUAL', 'SEMI-ANNUALLY', 'SEMI-ANNUAL', 'HALF YEARLY') THEN 2
        WHEN UPPER(TRIM(p_FREQ)) = '4' THEN 4
        ELSE NULL -- You can replace this with a default value if needed
    END
INTO CURRENT_FREQ
FROM DUAL;

-- INSERTION NEW_INSERT VALUE BY CHK 
SELECT 
    CASE
        WHEN UPPER(TRIM(p_chkDataTypeValue)) = UPPER(TRIM('D')) THEN 'BAL'
        ELSE NULL 
    END
INTO CHK_D_BL_INS
FROM DUAL;

-- Try to select the POLICY_NO into v_policy_no_dup
BEGIN  
    SELECT POLICY_NO
    INTO v_policy_no_dup
    FROM bajaj_due_data  
    WHERE 
        (UPPER(TRIM(POLICY_NO)) = UPPER(TRIM(p_POLICY_NO))) 
        AND ( UPPER(TRIM(company_cd)) = UPPER(TRIM(p_COMPANY_CD)))
        AND ( mon_no = p_MON_NO)
        AND ( year_no = p_YEAR_NO)
        AND (UPPER(TRIM(importdatatype)) = UPPER(TRIM(p_MyImportDataType)))
    FETCH FIRST 1 ROWS ONLY;  EXCEPTION WHEN NO_DATA_FOUND THEN v_policy_no_dup := NULL; END;

             

-- GET SETT MyLapsedDate BY P_DUE_DATE
SELECT 
    CASE 
        WHEN p_due_date IS NOT NULL THEN TO_DATE(p_DUE_DATE, 'DD-MM-YY')
        ELSE NULL
    END 
INTO MyLapsedDate
FROM DUAL;

--GET CMB_DATA_TYPE BY IMDATATYPE 
 SELECT 
    CASE 
        WHEN p_ddlImportDataTypeValue = 'DUE' THEN 'DUE DATA'
        WHEN p_ddlImportDataTypeValue = 'LAPSED' THEN 'LAPSED DATA'
        WHEN p_ddlImportDataTypeValue = 'PAID' THEN 'DUE DATA'
        WHEN p_ddlImportDataTypeValue = 'REINS' THEN 'LAPSED DATA'
        ELSE NULL
    END AS CMB_DATA_TYPE INTO CMB_DATA_TYPE
FROM DUAL;           
BEGIN

IF v_policy_no_dup IS NULL THEN 
    INSERT INTO BAJAJ_DUE_DATA (
            COMPANY_CD, STATUS_CD, LOCATION, POLICY_NO, CL_NAME, PREM_AMT,
            PAY_MODE, DUE_DATE, CL_ADD1, CL_ADD2, CL_ADD3, CL_CITY, CL_PIN,
            CL_PHONE1, CL_PHONE2, CL_MOBILE, MON_NO, YEAR_NO, USERID, IMPORT_DT,
            EMP_NO, INV_CD, DUP_REC, PLAN_NAME, PREM_FREQ, DOC, BRANCH_CD, AR_BRANCH_CD,
            PLY_TERM, CL_ADD4, CL_ADD5, PLAN_NO, BPREM_FREQ, PREM_TERM, LAST_UPDATE_DT,
            LAST_UPDATE, FRESH_RENEWAL4, SYS_AR_NO, MAIL_FLAG, SEND_ID, SEND_DATE, APP_NO,
            MATCHED, REN_STATUS, REMARKS, IMPORTDATATYPE, HISTORY, SYS_AR_NO_REN, AUTOMAP,
            CLIENT_CD, INV_CODE, P_NAME, I_NAME, SA, REM_FLAGE, STATE_CD, COMM, COMM_AMT,
            BASE_SYS_AR_NO, MATCH_HEADER, CPREM_FREQ, MATCH_HEADER1, NEWINSERT, SLOT,
            TALISMA_FLAG, MARGIN4, SMS_FLAG, FORCE_FLAG, UPD_FLAG, PLAN_UPD, FREQ_UPD,
            ACTIVE_CLIENT, P_ADD1, P_ADD2, P_CITY, P_STATE_CD, P_PIN, IADD1, IADD2, ICITY,
            ISTATE_CD, IPIN, PLAN_RATE4, PAID_MONTH_YEAR, STATUS_CD_OLD, FREQ, FRESH_RENEWAL,
            MARGIN, PLAN_RATE, RENEWAL_STATUS, FLAG_13M, ECS_DATE, NEW_STATUS_CD
        ) VALUES (
            p_COMPANY_CD, p_STATUS_CD, p_LOCATION, p_POLICY_NO, p_CL_NAME, p_PREM_AMT,
            p_PAY_MODE, TO_DATE(p_DUE_DATE, 'DD/MM/YYYY'), p_CL_ADD1, p_CL_ADD2, p_CL_ADD3, p_CL_CITY, p_CL_PIN,
            p_CL_PHONE1, p_CL_PHONE2, p_CL_MOBILE, p_MON_NO, p_YEAR_NO, p_USERID, SYSDATE,--p_IMPORT_DT,
            p_EMP_NO, p_INV_CD, p_DUP_REC, p_PLAN_NAME, p_PREM_FREQ, TO_DATE(p_DOC, 'DD/MM/YYYY') , p_BRANCH_CD, p_AR_BRANCH_CD,
            p_PLY_TERM, p_CL_ADD4, p_CL_ADD5, p_PLAN_NO, p_BPREM_FREQ, p_PREM_TERM, TO_DATE(p_LAST_UPDATE_DT, 'DD/MM/YYYY') ,
            TO_DATE(p_LAST_UPDATE, 'DD/MM/YYYY') , p_FRESH_RENEWAL4, p_SYS_AR_NO, p_MAIL_FLAG, p_SEND_ID, TO_DATE(p_SEND_DATE, 'DD/MM/YYYY') , p_APP_NO,
            p_MATCHED, p_REN_STATUS, p_REMARKS, p_MyImportDataType /* p_IMPORTDATATYPE*/, p_HISTORY, p_SYS_AR_NO_REN, p_AUTOMAP,
            p_CLIENT_CD, p_INV_CODE, p_P_NAME, p_I_NAME, p_SA, p_REM_FLAGE, p_STATE_CD, p_COMM, p_COMM_AMT,
            p_BASE_SYS_AR_NO, p_MATCH_HEADER, p_CPREM_FREQ, p_MATCH_HEADER1, CHK_D_BL_INS /* p_NEWINSERT */, p_SLOT,
            p_TALISMA_FLAG, p_MARGIN4, p_SMS_FLAG, 'FORCE FULL'/* p_FORCE_FLAG*/, p_UPD_FLAG, p_PLAN_UPD, p_FREQ_UPD,
            p_ACTIVE_CLIENT, p_P_ADD1, p_P_ADD2, p_P_CITY, p_P_STATE_CD, p_P_PIN, p_IADD1, p_IADD2, p_ICITY,
            p_ISTATE_CD, p_IPIN, p_PLAN_RATE4, p_PAID_MONTH_YEAR, p_STATUS_CD_OLD, CURRENT_FREQ /*p_FREQ*/ , p_FRESH_RENEWAL,
            p_MARGIN, p_PLAN_RATE, p_RENEWAL_STATUS, p_FLAG_13M,TO_DATE(p_ECS_DATE, 'DD/MM/YYYY') , p_NEW_STATUS_CD
        );
        COMMIT; 

END IF;
    EXCEPTION
        WHEN OTHERS THEN
            ROLLBACK;
            RAISE_APPLICATION_ERROR(-20002, 'Insert failed: ' || SQLERRM) ;
    END;
END PSM_DAP_INSERT_BPD_ONLY_BDD;