CREATE OR REPLACE PROCEDURE PSMM_SCH_SEARCH_GET_ROW_DB (
    PX_Find_state IN VARCHAR2,
    PX_FRM_STR    IN VARCHAR2,
    PX_AMC_COL    IN VARCHAR2 DEFAULT NULL, -- MF_ADD: AMC
    PX_COL1       IN VARCHAR2 DEFAULT NULL, -- PRODUCT_TYPE   -- strMF
    PX_COL2       IN VARCHAR2 DEFAULT NULL, -- SCH_CODE       -- SHORT_NAME
    PX_COL3       IN VARCHAR2 DEFAULT NULL, -- SCH_NAME       -- SCH_NAME
    PX_COL4       IN VARCHAR2 DEFAULT NULL, -- SHORT_NAME     -- mut_name
    PX_COL5       IN VARCHAR2 DEFAULT NULL, -- MUT_NAME       -- CodeMF
    PX_COL6       IN VARCHAR2 DEFAULT NULL, -- PROD_NAME      -- sch_code
    PX_COL7       IN VARCHAR2 DEFAULT NULL, -- PROD_CODE    
    PX_OTHER1     IN VARCHAR2 DEFAULT NULL,
    PX_OTHER2     IN VARCHAR2 DEFAULT NULL,  
    PX_LOG        IN VARCHAR2,
    PX_ROLE       IN VARCHAR2,
    PX_CURSOR     OUT SYS_REFCURSOR
) AS
    V_TR_NEW1_PROD              VARCHAR2(100);
    V_TR_NEW2_PRODUCT           VARCHAR2(100);
    V_TR_NEW3_LOG_NAME          VARCHAR2(100);
    V_TR_NEW4_SCH               VARCHAR2(100);
    V_BROK_RECD1_PROD_CLASS     VARCHAR2(100);
    V_BROK_RECD2_MUT_FUND       VARCHAR2(100);
    V_BROK_RECD3_LOG_NAME       VARCHAR2(100);
    V_BROK_RECD4_SCH            VARCHAR2(100);
    V_BROK_RECD_RIO1_PROD_CLASS VARCHAR2(100);
    V_BROK_RECD_RIO2_MUT_FUND   VARCHAR2(100);
    V_BROK_RECD_RIO3_LOG_NAME   VARCHAR2(100);
    V_BROK_RECD_RIO4_SCH        VARCHAR2(100);
    V_TR_MF1_A_AMC              VARCHAR2(100);
    V_TR_MF3_SCH                VARCHAR2(100);
    V_NFO_SCHEME1_ISSUE_DATE    DATE;
    V_NFO_SCHEME2_CLOSE_DATE    DATE;
    V_NFO_SCHEME3_T_SCHCD       VARCHAR2(100);
    V_NFO_SCHEME3_T_SCHNM       VARCHAR2(100);    
    V_ERROR                     VARCHAR2(1000);
BEGIN

  IF PX_COL2 IS NOT NULL THEN
    IF PX_FRM_STR = 'frmTransactionNew' THEN
      IF PX_COL1 = 'Shares' THEN
        OPEN PX_CURSOR FOR SELECT 'Entry of IPO Transaction cannot be Done Here' AS MSG FROM DUAL;
        RETURN;
      END IF;

      V_TR_NEW1_PROD:= PX_COL1;
      V_TR_NEW2_PRODUCT:= PX_COL4;

      IF PX_OTHER1 = PX_COL3 THEN
        V_TR_NEW3_LOG_NAME:= PX_COL3;
      END IF;

      IF PX_OTHER2 = PX_COL2 THEN
        V_TR_NEW4_SCH:= PX_COL2;
      END IF;

      -- Return the processed data
      OPEN PX_CURSOR FOR
      SELECT V_TR_NEW1_PROD AS PROD_TYPE,
             V_TR_NEW2_PRODUCT AS PRODUCT,
             V_TR_NEW3_LOG_NAME AS LOG_NAME,
             V_TR_NEW4_SCH AS SCHEME_CODE
      FROM DUAL;

    ELSIF PX_FRM_STR = 'frmBrokRecdSlabs' THEN
      V_BROK_RECD1_PROD_CLASS:= PX_COL1;
      V_BROK_RECD2_MUT_FUND:= PX_COL4;

      IF PX_OTHER1 = PX_COL3 THEN
        V_BROK_RECD3_LOG_NAME:= PX_COL3;
      END IF;
      IF PX_OTHER2 = PX_COL2 THEN
        V_BROK_RECD4_SCH:= PX_COL2;
      END IF;

      OPEN PX_CURSOR FOR
      SELECT V_BROK_RECD1_PROD_CLASS AS PROD_CLASS,
             V_BROK_RECD2_MUT_FUND AS MUT_FUND,
             V_BROK_RECD3_LOG_NAME AS LOG_NAME,
             V_BROK_RECD4_SCH AS SCHEME_CODE
      FROM DUAL;

    ELSIF PX_FRM_STR = 'frmBrokRecdSlabsRIO' THEN
      V_BROK_RECD_RIO1_PROD_CLASS:= PX_COL1;
      V_BROK_RECD_RIO2_MUT_FUND:= PX_COL4;

      IF PX_OTHER1 = PX_COL3 THEN
        V_BROK_RECD_RIO3_LOG_NAME:= PX_COL3;
      END IF;
      IF PX_OTHER2 = PX_COL2 THEN
        V_BROK_RECD_RIO4_SCH:= PX_COL2;
      END IF;

      OPEN PX_CURSOR FOR
      SELECT V_BROK_RECD_RIO1_PROD_CLASS AS PROD_CLASS,
             V_BROK_RECD_RIO2_MUT_FUND AS MUT_FUND,
             V_BROK_RECD_RIO3_LOG_NAME AS LOG_NAME,
             V_BROK_RECD_RIO4_SCH AS SCHEME_CODE
      FROM DUAL;

    ELSIF PX_FRM_STR = 'frmtransactionmf' THEN
      V_TR_MF1_A_AMC:= PX_COL5; --PX_COL4

      IF PX_OTHER1 = PX_COL3 THEN
        V_TR_MF3_SCH:= PX_COL4; -- PX_COL3
      END IF;

      OPEN PX_CURSOR FOR
      SELECT V_TR_MF1_A_AMC AS AMC_CODE,
             V_TR_MF3_SCH AS SCHEME_NAME
      FROM DUAL;

    ELSIF PX_FRM_STR = 'FrmNfoSchemes' THEN

      SELECT ISS_DATE, CLOSE_DATE  
      INTO V_NFO_SCHEME1_ISSUE_DATE, V_NFO_SCHEME2_CLOSE_DATE
      FROM SCHEME_INFO 
      WHERE SCH_CODE = PX_COL6 AND ROWNUM = 1;

      V_NFO_SCHEME3_T_SCHCD:= PX_COL6;
      V_NFO_SCHEME3_T_SCHNM:= PX_COL3;

      OPEN PX_CURSOR FOR
      SELECT V_NFO_SCHEME1_ISSUE_DATE AS ISSUE_DATE,
             V_NFO_SCHEME2_CLOSE_DATE AS CLOSE_DATE,
             V_NFO_SCHEME3_T_SCHCD AS SCHEME_CODE,
             V_NFO_SCHEME3_T_SCHNM AS SCHEME_NAME
      FROM DUAL;

    ELSE
      -- Default return if no matching form
      OPEN PX_CURSOR FOR SELECT 'No matching form found' AS MSG FROM DUAL;
    END IF;
  ELSE
    -- Return empty result if PX_COL2 is null
    OPEN PX_CURSOR FOR SELECT 'No data available' AS MSG FROM DUAL;
  END IF;

EXCEPTION
  WHEN NO_DATA_FOUND THEN
    OPEN PX_CURSOR FOR SELECT 'Scheme not found' AS MSG FROM DUAL;
  WHEN OTHERS THEN
  
  V_ERROR:= 'Error: ' || SQLERRM;
    OPEN PX_CURSOR FOR SELECT V_ERROR AS MSG FROM DUAL;
END PSMM_SCH_SEARCH_GET_ROW_DB;