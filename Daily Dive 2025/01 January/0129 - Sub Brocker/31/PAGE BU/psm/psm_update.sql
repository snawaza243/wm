create or replace PROCEDURE PSM_ASS_M_UPDATE_AGENT_MASTER (
    P_LOGGEDINUSER IN VARCHAR2,
    P_EMPANELMENTTYPE IN VARCHAR2,
    P_AGENTCODE IN VARCHAR2,
    P_EXISTCODE IN VARCHAR2,
    P_AGENTNAME IN VARCHAR2,
    P_SOURCEID IN VARCHAR2,
    P_RMCODE IN VARCHAR2,
    P_ADDRESS1 IN VARCHAR2,
    P_ADDRESS2 IN VARCHAR2,
    P_CITYID IN VARCHAR2,
    P_LOCATIONID IN VARCHAR2,
    P_MOBILE IN NUMBER,
    P_PIN IN VARCHAR2,
    P_FAX IN VARCHAR2,
    P_CONTACTPER IN VARCHAR2,
    P_EMAIL IN VARCHAR2,
    P_TDS IN NUMBER,
    P_ASSOCIATETYPE IN VARCHAR2,
    P_ASSOCIATETYPECATEGORY IN VARCHAR2,

    P_CONTACTPERSONEMAILID IN VARCHAR2,
    P_EMPANELMENTDATE IN DATE,
    P_PHONE IN VARCHAR2,
    P_REMARKS IN VARCHAR2,
    P_SUPERANA IN VARCHAR2,
    P_ONLINESUBSCRIPTIONCHECK IN VARCHAR2,
    P_ONLINEPLATFORMBLOCK IN VARCHAR2,
    P_OFFLINEPLATFORMBLOCK  IN VARCHAR2, 
    P_ONLINEPLATFORMBLOCKREMARK IN VARCHAR2,
    P_OFFLINEPLATFORMBLOCKREMARK  IN VARCHAR2,
    P_AUDITDATE IN DATE,
    P_AUDITCHECK IN VARCHAR2,
    P_PAYMENTMODEID IN NUMBER,
    P_ACCOUNTTYPEID IN VARCHAR2,
    P_ACCNO IN VARCHAR2,
    P_AFFECTEDFROM IN VARCHAR2,
    P_BANKID IN VARCHAR2,
    P_BANKCITYID IN VARCHAR2,
    P_BRANKBRANCHID IN VARCHAR2,
    P_SMSFLAG IN VARCHAR2,
    P_GSTINNO IN VARCHAR2,
    P_DOB IN DATE,
    P_AGENTTYPE IN VARCHAR2,
    P_PAN IN VARCHAR2,
    P_DIST IN VARCHAR2,
    P_AADHARCARDNO IN VARCHAR2,
    P_POSPMARKING IN VARCHAR2,
    P_POSPTYPE IN VARCHAR2,
    P_POSPNOLI IN VARCHAR2,
    P_POSPNOGI IN VARCHAR2,
    P_POSPCERTIFIEDONLI IN DATE,
    P_POSPVALIDTILLLI IN DATE,
    P_POSPCERTIFIEDONGI IN DATE,
    P_POSPVALIDTILLGI IN DATE,
    P_VERIFIEDSTATUS IN VARCHAR2,
    P_NEFTBANKNAME IN VARCHAR2,
    P_NEFTBRANCH IN VARCHAR2,
    P_NEFTIFSCCODE IN VARCHAR2,
    P_NEFTNAME IN VARCHAR2,
    P_CERTPASSED IN VARCHAR2,
    P_CERTEXAMS IN VARCHAR2,
    P_CERTREGNO IN VARCHAR2,

    P_RES_ADD_1 IN VARCHAR2,
    P_RES_ADD_2 IN VARCHAR2,
    P_RES_ADD_STATE IN VARCHAR2,
    P_RES_ADD_CITY IN VARCHAR2,
    P_RES_ADD_PINCODE IN VARCHAR2,
    P_DT_NUMBER IN VARCHAR2,
        -- Output parameter
    P_RESULT OUT VARCHAR2
) IS

    V_AADHAR_EXISTS INTEGER;

BEGIN

    -- Check if the Aadhar card number already exists in the AGENT_MASTER table for another agent
    SELECT COUNT(*)
    INTO V_AADHAR_EXISTS
    FROM AGENT_MASTER
    WHERE AADHAR_CARD_NO = P_AADHARCARDNO AND EXIST_CODE != P_EXISTCODE;

    -- If Aadhar exists for another agent, return error message
   -- IF V_AADHAR_EXISTS > 0 THEN
     --   P_RESULT := 'Error: Aadhar card number already exists for another agent.';
       -- RETURN;
    --END IF;
    -- Update existing agent data in AGENT_MASTER table based on EXIST_CODE

    IF P_ASSOCIATETYPECATEGORY IS NULL THEN
        P_RESULT := 'Associate Category is Empty!';
        RETURN;
    END IF;

    UPDATE AGENT_MASTER
    SET
        loggeduserid = P_LOGGEDINUSER,
	    PAIDFLAG = P_EMPANELMENTTYPE,
        AGENT_NAME = P_AGENTNAME,
        SOURCEID = P_SOURCEID,
        RM_CODE = P_RMCODE,
        ADDRESS1 = P_ADDRESS1,
        ADDRESS2 = P_ADDRESS2 ,
        CITY_ID = P_CITYID,
        LOCATION_ID = P_LOCATIONID,
        MOBILE = P_MOBILE,
        PINCODE = P_PIN,
        FAX = P_FAX,
        CONTACTPER = P_CONTACTPER,
        EMAIL = P_EMAIL,
        TDS   = P_TDS ,
        SUB_BROKER_TYPE  = P_ASSOCIATETYPE,
        category_id =     P_ASSOCIATETYPECATEGORY,

        CPEMAILID  = P_CONTACTPERSONEMAILID,
        modify_date  = SYSDATE,
        modify_user = P_LOGGEDINUSER,

        --TIMEST  = P_EMPANELMENTDATE,

        PHONE      = P_PHONE,
        REMARK      = P_REMARKS,
        master_ana       = P_SUPERANA,
        ONLINE_SUBSCIPTION  = P_ONLINESUBSCRIPTIONCHECK ,
        ONLINE_BLOCK_AGENT = P_ONLINEPLATFORMBLOCK,
        BLOCK_AGENT = P_OFFLINEPLATFORMBLOCK,
        online_block_remark = P_ONLINEPLATFORMBLOCKREMARK,
        offline_block_remark = P_OFFLINEPLATFORMBLOCKREMARK,
        ANA_AUDITDATE = P_AUDITDATE,
        ANA_AUDIT = P_AUDITCHECK,
        PAYMENTMODEID = P_PAYMENTMODEID,
        ACCTYPEID = P_ACCOUNTTYPEID,
        ACCNO = P_ACCNO,
        AFFECTEDFROM = P_AFFECTEDFROM ,
        BANKID = P_BANKID,
        CITY_NAME = P_BANKCITYID,
        BANK_BRANCH_NAME = P_BRANKBRANCHID,
        SMS_FLAG = P_SMSFLAG,
        GSTIN_NO = P_GSTINNO,
        DOB = P_DOB,
        AGENT_TYPE = P_AGENTTYPE,
        PAN = P_PAN,
        DIST = P_DIST,
        AADHAR_CARD_NO = P_AADHARCARDNO,
        POSP_MARKING  = P_POSPMARKING ,
        POSP_TYPE  = P_POSPTYPE ,
        POSP_NO_LI = P_POSPNOLI,
        POSP_NO_GI = P_POSPNOGI,
        POSP_CERTIFIED_ON_LI = P_POSPCERTIFIEDONLI,
        POSP_VALID_TILL_LI = P_POSPVALIDTILLLI,
        POSP_CERTIFIED_ON_GI = P_POSPCERTIFIEDONGI,
        POSP_VALID_TILL_GI = P_POSPVALIDTILLGI,
        VERIFIED_STATUS  = P_VERIFIEDSTATUS ,
        --NEFT_BANK_NAME = P_NEFTBANKNAME ,
        --BANK_BRANCH_NAME = P_NEFTBRANCH ,
        --IFSC_CODE = P_NEFTIFSCCODE ,
        --NAME_IN_BANK = P_NEFTNAME,
        AMFICERT = P_CERTPASSED,
        AMFIEXTYPEID =P_CERTEXAMS, 
        AMFIID = P_CERTREGNO,

        AGENT_MASTER.R_ADDRESS1 = P_RES_ADD_1,
        AGENT_MASTER.R_ADDRESS2 = P_RES_ADD_2,
        AGENT_MASTER.R_STATE_NAME = P_RES_ADD_STATE,
        AGENT_MASTER.R_CITY_NAME = P_RES_ADD_CITY,
        AGENT_MASTER.R_PINCODE = P_RES_ADD_PINCODE

    WHERE
        EXIST_CODE = P_EXISTCODE;

-- Check if rows were updated, then return a message
    IF SQL%ROWCOUNT > 0 THEN
        -- If rows were updated, return success message
        P_RESULT := 'Update Successful ' || P_EXISTCODE ;
    ELSE
        -- If no rows were updated, return an error message
        P_RESULT := 'No records found to update';
    END IF;

    -- Commit the transaction
    COMMIT;

EXCEPTION
    WHEN OTHERS THEN
        -- In case of any error, rollback and return the error message
        ROLLBACK;
        P_RESULT := 'Error: ' || SQLERRM;

END PSM_ASS_M_UPDATE_AGENT_MASTER;